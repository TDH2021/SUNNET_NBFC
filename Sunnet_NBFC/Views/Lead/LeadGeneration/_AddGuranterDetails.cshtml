@model Sunnet_NBFC.Models.clsLeadGenerationMaster

<style>
    .table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
        
    }

        .table td, th {
           
           
        }
</style>
<div class="form-group">
    <div class="container-fluid" style="margin-top:20px;">
        <div class="col-md-12">
            <h5> Guarantor Details</h5>
        </div>
        <hr>

        <div class="row">

            <div class="col-md-4">
                <label for="exampleInputEmail1">First Name</label>
                @Html.TextBoxFor(model => model.G_FirstName, new
                {
                    @class = "form-control",
                    @placeholder = "First Name",
                    @name = "FName",
                    @required = "true",
                    @maxlength = "50",
                    @id = "G_FName",
                    @autocomplete = "off"
                })


            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Middle Name</label>
                @Html.TextBoxFor(model => model.G_MiddleName, new
                {
                    @class = "form-control",
                    @placeholder = "Middle Name",
                    @name = "MName",
                    @required = "true",
                    @id = "G_MName"

                })
            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Last Name</label>
                @Html.TextBoxFor(model => model.G_LastName, new
                {
                    @class = "form-control",
                    @placeholder = "Last Name",
                    @name = "LName",
                    @required = "true",
                    @id = "G_LName"

                })
            </div>
        </div>


        <div class="row">

            <div class="col-md-4">
                <label for="exampleInputEmail1">Gender</label>
                @Html.DropDownListFor(model => model.G_Gender,
                     new List<SelectListItem> {
                new SelectListItem { Value = "0" , Text = "- Select Gender -" },
                new SelectListItem { Value = "Male" , Text = "Male" },
                new SelectListItem { Value = "Female" , Text = "Female" }
                 },
                     new { @class = "form-control", @id = "G_Gender" })


            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Date of Birth</label>
                @Html.TextBoxFor(model => model.G_DOB, new
                {
                    @class = "form-control",
                    @placeholder = "Date of Birth",
                    @name = "Dob",
                    @required = "true",
                    @id = "G_Dob",
                    @type = "Date"

                })
            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Martial Status</label>


                @Html.DropDownListFor(model => model.G_Marital_Status,
          new List<SelectListItem> {
     new SelectListItem { Value = "" , Text = "- Select Marital -" },
     new SelectListItem { Value = "Single" , Text = "Single" },
     new SelectListItem { Value = "Married" , Text = "Married" }
      },
          new { @class = "form-control", @id = "G_MartialStatus" })


            </div>
        </div>

        <div class="row">


            <div class="col-md-4">
                <label for="exampleInputEmail1">Corrospondance Address</label>
                @Html.TextBoxFor(model => model.G_PresentAddress, new
           {
               @class = "form-control",
               @placeholder = "Present Address",
               @name = "PresentAddress",
               @required = "true",
               @id = "G_PresentAddress",
               @onchange = "SetValues_G();"

           })
            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Corrospondance Pincode</label>
                @Html.TextBoxFor(model => model.G_PresentPinCode, new
           {
               @class = "form-control",
               @placeholder = "Present Pincode",
               @name = "PresentPincode",
               @required = "true",

               @type = "number",
               @id = "G_PresentPincode",
               @onchange = "SetValues1_G();"

           })
            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Corrospondance State</label>
                @Html.DropDownListFor(model => model.G_PresentStateId, ViewBag.StateList as SelectList, "- Select State - ",
                     new
                          {
                              @class = "form-control",
                              @id = "G_C_State",
                         @onchange = "SetValues2_G();"
                     })
                @Html.ValidationMessageFor(model => model.G_PresentStateId, "", new { @class = "text-danger" })


            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label for="exampleInputEmail1">Corrospondance City</label>
                @Html.DropDownListFor(model => model.G_PresentCityId,
                         new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "CityName"),
                         "Select city", new
                              {
                                  @class = "form-control",
                                  @id = "G_C_City",
                             @onchange = "SetValues3_G();"
                         })
                @*@Html.DropDownListFor(model => model.G_PresentCityId, ViewBag.CityList as SelectList, new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.G_PresentCityId, "", new { @class = "text-danger" })


            </div>

            <div class="col-md-4">
               
            </div>

            <div class="col-md-4">
              
            </div>
        </div>






        <div class="row" style="margin-bottom:10px; margin-top:10px;">
            <div class="col-md-12">
                <input type="checkbox" id="G_chlpercorr" name="G_chlpercorr
                       " value="Yes" onchange="G_Applicantpermascorr();">
                <label for="co_chlpercorr"> Permanent Address As Same As Corrospondance Address</label><br>
            </div>

        </div>





        <div class="row">
            <div class="col-md-4">
                <label for="exampleInputEmail1">Permanent Address</label>
                @Html.TextBoxFor(model => model.G_PermanentAddress, new
                {
                    @class = "form-control",
                    @placeholder = "Permanent Address",
                    @name = "PermanentAddress",
                    @required = "true",
                    @id = "G_PermanentAddress"

                })
            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Permanent Pincode</label>
                @Html.TextBoxFor(model => model.G_PermanentPincode, new
                {
                    @class = "form-control",
                    @placeholder = "Permanent Pincode",
                    @name = "PermanentPincode",
                    @required = "true",
                    @type = "number",
                    @id = "G_PermanentPincode"

                })
            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Permanent State</label>

                @Html.DropDownListFor(model => model.G_PermanentStateId, ViewBag.StateList as SelectList, "- Select State -", new
                {
                    @class = "form-control",
                    @id = "G_P_State"
                })
                @Html.ValidationMessageFor(model => model.G_PermanentStateId, "", new { @class = "text-danger" })
            </div>
        </div>








        <div class="row">


            <div class="col-md-4">
                <label for="exampleInputEmail1">Permanent City</label>

                @Html.DropDownListFor(model => model.G_PermanentCityId,
                         new SelectList(Enumerable.Empty<SelectListItem>(), "CityId", "CityName"),
                         "Select city", new { @class = "form-control", @id = "G_P_City" })
                @*@Html.DropDownListFor(model => model.PermanentCityId, ViewBag.CityList as SelectList, new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.G_PermanentCityId, "", new { @class = "text-danger" })


            </div>
            <div class="col-md-4">
                <label for="exampleInputEmail1">Mobile No</label>
                @Html.TextBoxFor(model => model.G_Mobile_No, new
                {
                    @class = "form-control",
                    @placeholder = "Mobile No",
                    @name = "CibilScore",
                    @required = "true",
                    @id = "G_Mobile_No"

                })
            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1">Email Id</label>
                @Html.TextBoxFor(model => model.G_Email_Id, new
                {
                    @class = "form-control",
                    @placeholder = "Email Id",
                    @name = "CO_EmailId",
                    @required = "true",
                    @id = "G_EmailId"

                })
            </div>

        </div>
        <div class="row">



            <div class="col-md-4">
                <label for="exampleInputEmail1"> Pan No </label>
                @Html.TextBoxFor(model => model.G_PAN, new
                {
                    @class = "form-control",
                    @placeholder = "PanNo",
                    @name = "CO_PanNo",
                    @required = "true",
                    @id = "G_PanNo"

                })
            </div>

            <div class="col-md-4">
                <label for="exampleInputEmail1"> Aadhar No </label>
                @Html.TextBoxFor(model => model.G_Adhaar, new
           {
               @class = "form-control",
               @placeholder = "Aadhar No",
               @name = "G_AadharNo",
               @required = "true",
               @type = "number",
               @id = "G_AadharNo"

           })
            </div>


            <div class="col-md-4">
                <label for="exampleInputEmail1">
                    Cibil Score
                </label>
                @Html.TextBoxFor(model => model.G_CIBIL, new
                {
                    @class = "form-control",
                    @placeholder = "Cibil Score",
                    @name = "CO_CibilScore",
                    @required = "true",
                    @id = "G_CibilScore",
                    @type = "Number"

                })
            </div>


        </div>


      





    </div>
    <div class="card-footer" style="margin-top:10px;">
        <button type="submit" class="btn btn-primary" id="btnAdd" onclick="AddGdetails();" value="Add"> Add Guarantor Details </button>

    </div>

    <table class="table table-striped table-bordered" id="example10">
        <thead>
            <tr>
                <th>F Name</th>
                <th>M Name</th>
                <th>L Name</th>
                <th>Gender</th>
                <th>Dob</th>
                <th>MartialStatus</th>
                <th>Current Address</th>
                <th>Pincode</th>
                <th>State</th>
                <th>City</th>
                <th>Permanent Address</th>
                <th>Pincode</th>
                <th>State</th>
                <th>City</th>
                <th>Mobile No</th>
                <th>Email No</th>
                <th>Pan No</th>
                <th>Aadhar No</th>
                <th>Cibil Score</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>

           

        </tbody>

    </table>


</div>

<script type="text/javascript">
    function AddGdetails() {



        var customers1 = new Array();
        $("#example10 TBODY TR").each(function () {
            var row = $(this);
            var customer1 = {};

            customer1.G_FirstName = row.find("TD").eq(0).html();
            customer1.G_MiddleName = row.find("TD").eq(1).html();
            customer1.G_LastName = row.find("TD").eq(2).html();
            customer1.G_Gender = row.find("TD").eq(3).html();
            customer1.G_DOB = row.find("TD").eq(4).html();
            customer1.G_Marital_Status = row.find("TD").eq(5).html();


            customer1.G_PresentAddress = row.find("TD").eq(6).html();
            customer1.G_PresentPinCode = row.find("TD").eq(7).html();
            customer1.G_PresentStateId = row.find("TD").eq(8).html();
            customer1.G_PresentCityId = row.find("TD").eq(9).html();




            customer1.G_PermanentAddress = row.find("TD").eq(10).html();
            customer1.G_PermanentPincode = row.find("TD").eq(11).html();
            customer1.G_P_State = row.find("TD").eq(11).html(12);
            customer1.G_P_City = row.find("TD").eq(12).html(13);

            customer1.G_Mobile_No = row.find("TD").eq(14).html();
            customer1.G_EmailId = row.find("TD").eq(15).html();
            customer1.G_PanNo = row.find("TD").eq(16).html();
            customer1.G_AadharNo = row.find("TD").eq(17).html();
            customer1.G_CibilScore = row.find("TD").eq(18).html();
            if (customer1.G_FirstName != "No data available in table") {
                customers1.push(customer1);
            }

        });

        var G_Mobile_No = $("#G_Mobile_No").val();
        var G_AadharNo = $("#G_AadharNo").val();

        var flag = 0;
        if (customers1.length != 0) {



            for (let i = 0; i < customers1.length; i++) {

                if (customers1[i].G_Mobile_No == G_Mobile_No) {

                    flag = 1;
                }

            }
        }

        flag == 0;

        if (flag == 0) {

            var txtFName = $("#G_FName").val();
            var txtMName = $("#G_MName").val();
            var txtLName = $("#G_LName").val();
            var txtG_Gender = $("#G_Gender option:selected").val();
            var txtDob = $("#G_Dob").val();
            var txtG_MartialStatus = $("#G_MartialStatus option:selected").val();

            var G_PresentAddress = $("#G_PresentAddress").val();
            var G_PresentPincode = $("#G_PresentPincode").val();
            var G_C_State = $("#G_C_State option:selected").val();
            var G_C_City = $("#G_C_City option:selected").val();


            var G_PermanentAddress = $("#G_PermanentAddress").val();
            var G_PermanentPincode = $("#G_PermanentPincode").val();
            var G_P_State = $("#G_P_State option:selected").val();
            var G_P_City = $("#G_P_City option:selected").val();
            var G_Mobile_No = $("#G_Mobile_No").val();
            var G_EmailId = $("#G_EmailId").val();
            var G_PanNo = $("#G_PanNo").val();
            var PANregex = /[A-Z]{5}[0-9]{4}[A-Z]{1}$/;
            var G_AadharNo = $("#G_AadharNo").val();
            var G_CibilScore = $("#G_CibilScore").val();

            

            debugger

            if (txtFName.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor first name",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });

            } else if (txtMName.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor middle name",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });
            } else if (txtLName.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor last name",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });

            } else if (txtG_Gender.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor gender",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });

            } else if (txtDob.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor DOB",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });

            } else if (underAgeValidategurantor() < 18) {

                swal({
                    title: "Error",
                    text: "Gurantor is not 18 years",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });

            } else if (txtG_MartialStatus.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor matrial status",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });

            } else if (G_PresentAddress.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor PresentAddress",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });

            } else if (G_PresentPincode.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor matrial PresentPincode",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });

            } else if (G_PresentPincode.length != 6) {

                swal({
                    title: "Error",
                    text: "Invalid gurantor Present Pincode",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });
            }  else if (G_C_State.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor state",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });


            } else if (G_C_City.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor city",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });


            } else if (G_PermanentAddress.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor PermanentAddress",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });


            } else if (G_PermanentPincode.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor PermanentPincode",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });


            } else if (G_PermanentPincode.length != 6) {

                swal({
                    title: "Error",
                    text: "Invalid gurantor Permanent Pincode",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });
            } else if (G_P_State.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor  state",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });



            } else if (G_P_City.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor city",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });



            } else if (G_Mobile_No.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor mobile no",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });



            } else if (G_EmailId.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor valid email id",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });





            } else if (G_PanNo.length != 10) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor pan no",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });





            } else if (!PANregex.test(G_PanNo)) {

                swal({
                    title: "Error",
                    text: "Invalid PAN pan no",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });




            } else if (G_AadharNo.length != 12) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor Aadhar No",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });



            } else if (G_CibilScore.length == 0) {

                swal({
                    title: "Error",
                    text: "Please enter gurantor CibilScore",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });



            } else if (G_CibilScore > 900) {

                swal({
                    title: "Error",
                    text: "Please enter correct CibilScore",
                    icon: "error",
                    button: true,

                })
                    .then((willConfirm) => {
                        if (willConfirm) {

                        }
                    });



            } else {
                debugger

                var txtFName = $("#G_FName").val();
                var txtMName = $("#G_MName").val();
                var txtLName = $("#G_LName").val();
                var txtG_Gender = $("#G_Gender option:selected").val();
                var txtDob = $("#G_Dob").val();
                var txtG_MartialStatus = $("#G_MartialStatus").val();

                var G_PresentAddress = $("#G_PresentAddress").val();
                var G_PresentPincode = $("#G_PresentPincode").val();
                var G_C_State = $("#G_C_State option:selected").val();
                var G_C_City = $("#G_C_City option:selected").val();


                var G_PermanentAddress = $("#G_PermanentAddress").val();
                var G_PermanentPincode = $("#G_PermanentPincode").val();
                var G_P_State = $("#G_P_State option:selected").val();
                var G_P_City = $("#G_P_City option:selected").val();
                var G_Mobile_No = $("#G_Mobile_No").val();
                var G_EmailId = $("#G_EmailId").val();
                var G_PanNo = $("#G_PanNo").val();
                var G_AadharNo = $("#G_AadharNo").val();
                var G_CibilScore = $("#G_CibilScore").val();

                debugger
                //Get the reference of the Table's TBODY element.
                var tBody = $("#example10 > TBODY")[0];

                //Add Row.
                var row = tBody.insertRow(-1);

                //Add Name cell.
                var cell = $(row.insertCell(-1));
                cell.html(txtFName);

                cell = $(row.insertCell(-1));
                cell.html(txtMName);

                cell = $(row.insertCell(-1));
                cell.html(txtLName);


                cell = $(row.insertCell(-1));
                cell.html(txtG_Gender);

                cell = $(row.insertCell(-1));
                cell.html(txtDob);

                cell = $(row.insertCell(-1));
                cell.html(txtG_MartialStatus);



                cell = $(row.insertCell(-1));
                cell.html(G_PresentAddress);

                cell = $(row.insertCell(-1));
                cell.html(G_PresentPincode);

                cell = $(row.insertCell(-1));
                cell.html(G_C_State);

                cell = $(row.insertCell(-1));
                cell.html(G_C_City);
                cell = $(row.insertCell(-1));
                cell.html(G_PermanentAddress);

                cell = $(row.insertCell(-1));
                cell.html(G_PermanentPincode);

                cell = $(row.insertCell(-1));
                cell.html(G_P_State);

                cell = $(row.insertCell(-1));
                cell.html(G_P_City);



                cell = $(row.insertCell(-1));
                cell.html(G_Mobile_No);

                cell = $(row.insertCell(-1));
                cell.html(G_EmailId);


                cell = $(row.insertCell(-1));
                cell.html(G_PanNo);

                cell = $(row.insertCell(-1));
                cell.html(G_AadharNo);

                cell = $(row.insertCell(-1));
                cell.html(G_CibilScore);

                //Add Button cell.
                cell = $(row.insertCell(-1));
                var btnRemove = $("<input />");
                btnRemove.attr("type", "button");
                btnRemove.attr("onclick", "Remove(this);");
                btnRemove.val("Remove");
                cell.append(btnRemove);
            }

        } else {


            swal({
                title: "Error",
                text: "Gurantor already added",
                icon: "error",
                button: true,

            })
                .then((willConfirm) => {
                    if (willConfirm) {

                    }
                });


        }

    }
</script>

<script type="text/javascript">


    function underAgeValidategurantor() {
        debugger
        var birthday = $("#G_Dob").val();


        // it will accept two types of format yyyy-mm-dd and yyyy/mm/dd
        var optimizedBirthday = birthday.replace(/-/g, "/");

        //set date based on birthday at 01:00:00 hours GMT+0100 (CET)
        var myBirthday = new Date(optimizedBirthday);

        // set current day on 01:00:00 hours GMT+0100 (CET)
        var currentDate = new Date().toJSON().slice(0, 10) + ' 01:00:00';

        // calculate age comparing current date and borthday
        var myAge = ~~((Date.now(currentDate) - myBirthday) / (31557600000));

        if (myAge < 18) {
            return myAge;
        } else {
            return myAge;
        }

    }
</script>


<script type="text/javascript">

    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete: " + name)) {
            //Get the reference of the Table.
            var table = $("#example10")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };


</script>
